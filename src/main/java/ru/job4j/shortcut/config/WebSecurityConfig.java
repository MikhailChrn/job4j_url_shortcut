package ru.job4j.shortcut.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

/**
 * @EnableMethodSecurity - —ç—Ç–æ –∞–Ω–Ω–æ—Ç–∞—Ü–∏—è –≤ Spring Security, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ –º–µ—Ç–æ–¥–æ–≤ –¥–ª—è –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
 * –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–º–µ–Ω—è—Ç—å –ø—Ä–∞–≤–∏–ª–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –∫ –º–µ—Ç–æ–¥–∞–º, –∏—Å–ø–æ–ª—å–∑—É—è —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏,
 * —Ç–∞–∫–∏–µ –∫–∞–∫ @PreAuthorize, @PostAuthorize, @Secured.
 * @EnableWebSecurity *
 * ‚Äî –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –Ω–∞ —É—Ä–æ–≤–Ω–µ HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤
 * (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ—Å—Ç—É–ø –∫ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º URL'–∞–º, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏, —Ñ–æ—Ä–º –ª–æ–≥–∏–Ω–∞ –∏ –¥—Ä.).
 * <p>
 * üí° –ò—Ö –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–µ—Ç—Å—è, –∞ –¥–æ–ø–æ–ª–Ω—è–µ—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞.
 *
 * .loginProcessingUrl("/perform_login") *
 *     –£–∫–∞–∑—ã–≤–∞–µ—Ç URL, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è POST-–∑–∞–ø—Ä–æ—Å —Å –ª–æ–≥–∏–Ω–æ–º –∏ –ø–∞—Ä–æ–ª–µ–º.
 *     –≠—Ç–æ POST-–∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å —Ñ–æ—Ä–º—ã –≤—Ö–æ–¥–∞.
 *     Spring Security –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å ‚Äî –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.
 *     –ù–µ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –¥–ª—è —ç—Ç–æ–≥–æ URL ‚Äî Spring Security –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –µ–≥–æ —Å–∞–º.
 *     –ï—Å–ª–∏ —Ç—ã —É–∫–∞–∂–µ—à—å —ç—Ç–æ—Ç URL, —Ç–æ —Ç–≤–æ—è HTML-—Ñ–æ—Ä–º–∞ –¥–æ–ª–∂–Ω–∞ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–º–µ–Ω–Ω–æ –Ω–∞ /perform_login.
 */

@Configuration
@EnableWebSecurity
public class WebSecurityConfig {

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
                .csrf(AbstractHttpConfigurer::disable)
                .authorizeHttpRequests(auth -> auth
                        .requestMatchers("/admin/**").hasRole("ADMIN")
                        .anyRequest().authenticated()
                )
                .formLogin(form -> form
                        .loginPage("/login")
                        .loginProcessingUrl("/process-login")
                        .usernameParameter("username")
                        .passwordParameter("password")
                        .defaultSuccessUrl("/", true)
                        .failureUrl("/login?error=true")
                        .permitAll())
                .logout(form -> form
                        .logoutUrl("/logout")
                        .logoutSuccessUrl("/login?logout=true")
                        .invalidateHttpSession(true)
                        .deleteCookies("JSESSIONID")
                        .permitAll());

        return http.build();
    }

    @Bean
    public PasswordEncoder passwordEncoder() {
        return new BCryptPasswordEncoder();
    }

    @Bean
    public AuthenticationManager authenticationManager(AuthenticationConfiguration config) throws Exception {
        return config.getAuthenticationManager();
    }

}
